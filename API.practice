## APIとは？

### APIとは？
**API**（Application Programming Interface）は、アプリケーションの機能を外部に提供するためのインターフェースです。  
APIを使うことで、他のプログラムやサービスがその機能を利用することができます。

例:  
パソコン「動画の再生数を教えて」  
YouTube API「100万回だよ」

### 超重要
- スマホアプリの裏側で動いている機能がAPIです。
- Webサービスの裏側でもAPIが機能しています。
- 公開されているAPIを使うことで、開発の生産性を大幅に向上させることができます。

---

## WebAPIとは？

### WebAPIとは？
**WebAPI**は、インターネット経由で利用できる便利な機能を提供するAPIです。  
インターネットを通じて外部からAPIを呼び出し、必要なデータや機能を取得します。

例:  
パソコン「再生数が多い動画を教えて」  
YouTube API「〇〇のだよ」

### WebAPIはどこで使う？
WebAPIは様々な場所からアクセスできます。

- **ブラウザ** ↔️ **WebAPI**  
- **スマホアプリ** ↔️ **WebAPI**  
- **ターミナル** ↔️ **WebAPI**

これらの場所からWebAPIにアクセスすることができます。

---

## HTTPの仕組み（重要な二つを抜粋）

- **何に対して** = **URL**  
  例: `https://api.twitter.com/user_timeline` → 「タイムライン情報を取得するURL」

- **何をするか** = **HTTPメソッド**  
  例:  
  `GET` → データを取得する  
  `POST` → データを送信する  
  `PUT` → データを更新する  
  `DELETE` → データを削除する  

#### 例:  
`GET https://api.twitter.com/user_timeline`  
「タイムライン情報教えて」  
「あいよ」

---

## WebAPIを作るには？

### WebAPI作成の流れ

1. **画面遷移図を作る**  
   WebAPIの利用者がどのようにAPIを使うかを設計します。

2. **APIの機能一覧を列挙する**  
   提供したい機能をリストアップします。例えば、データ取得、データ送信など。

3. **URLとHTTPメソッドを設定する**  
   それぞれの機能に対して適切なURLとHTTPメソッド（GET, POST, など）を設定します。

4. **リクエストパラメータを設計する**  
   APIを呼び出す際に必要なパラメータ（例: ユーザーID、検索キーワード）を設計します。

5. **レスポンスデータを設計する**  
   APIが返すデータの形式（例: JSON, XML）や内容を設計します。

---

APIを使うことで、外部の便利な機能を自分のアプリやシステムに組み込むことができ、効率的な開発が可能になります。APIの理解と活用は、現代のシステム開発には欠かせないスキルです。


## 読書ログサービス API設計

### ① 画面遷移図を作る

- **読書ログの一覧** ↔️ **読書ログの作成**

読書ログサービスでは、ユーザーが読んだ本の読書ログを記録し、その記録を一覧で取得できるようにします。

### ② APIの機能一覧を列挙する

- **読書ログを記録する**
- **読書ログの一覧を取得する**

これらの機能を提供するために、APIを設計します。

### ③ URLとHTTPメソッドを設定する

- **読書ログを記録する**  
  `POST https://api.example.com/booklog`

- **読書ログの一覧を取得する**  
  `GET https://api.example.com/booklog`

### ④ リクエストパラメータを設計する

#### 1. **読書ログを記録する**
- **URL**: `POST https://api.example.com/booklog`
- **リクエストパラメータ**:
  - `name`: 本のタイトル
  - `text`: 読書ログの内容（感想など）

#### 2. **読書ログの一覧を取得する**
- **URL**: `GET https://api.example.com/booklog`
- **リクエストパラメータ**: なし

### ⑤ レスポンスデータを設計する

#### 1. **読書ログを記録する**

- **成功**:
  ```json
  {
    "ok": true,
    "booklog": {
      "name": "キングダム",
      "text": "熱い"
    }
  }
失敗:
json

{
  "ok": false,
  "error": "invalid parameter"
}
2. 読書ログの一覧を取得する
成功:
json

{
  "ok": true,
  "booklog": [
    {
      "name": "キングダム",
      "text": "熱い"
    },
    {
      "name": "ワンピース",
      "text": "面白い"
    }
  ]
}